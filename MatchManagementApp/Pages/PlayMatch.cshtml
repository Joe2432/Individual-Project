@page "{id:int}"
@model MatchManagementApp.UI.Pages.PlayMatchModel
@{
    ViewData["Title"] = "Play Match";
}

<h2 class="text-center mt-3 mb-4">Live Match Scoring</h2>

@if (Model.MatchViewModel?.Score != null)
{
    <div class="scoreboard mb-4">
        <table class="table table-bordered text-center">
            <thead>
                <tr>
                    <th></th>
                    @foreach (var idx in Model.MatchViewModel.DisplaySetIndices)
                    {
                        <th>Set @(idx + 1)</th>
                    }
                    <th>Current Game</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <strong>You</strong>
                        @if (Model.MatchViewModel.CurrentServer == "User")
                        {
                            <span class="badge bg-primary ms-2">Server</span>
                        }
                    </td>
                    @foreach (var g in Model.MatchViewModel.UserSetGames)
                    {
                        <td>@g</td>
                    }
                    <td>@Model.MatchViewModel.GameUserDisplay</td>
                </tr>
                <tr>
                    <td>
                        <strong>Opponent</strong>
                        @if (Model.MatchViewModel.CurrentServer == "Opponent")
                        {
                            <span class="badge bg-primary ms-2">Server</span>
                        }
                    </td>
                    @foreach (var g in Model.MatchViewModel.OpponentSetGames)
                    {
                        <td>@g</td>
                    }
                    <td>@Model.MatchViewModel.GameOpponentDisplay</td>
                </tr>
            </tbody>
        </table>
    </div>
}

@if (Model.MatchViewModel?.MatchOver == true)
{
    <div class="alert alert-success text-center mt-4">
        <h4>Match Over!</h4>
        <a href="/MatchHistory" class="btn btn-primary mt-3">View Match History</a>
    </div>
}
else if (Model.MatchViewModel != null)
{
    <div class="current-game-status text-center mb-3">
        <span class="badge bg-info text-dark">
            @if (Model.MatchViewModel.Score.InTiebreak)
            {
                <text>Tiebreak</text>
            }
            else
            {
                <text>@(Model.MatchViewModel.IsFirstServe ? "First Serve" : "Second Serve")</text>
            }
        </span>
    </div>

    <div class="row mb-4">
        <div class="col text-center">
            <h5>@(Model.MatchViewModel.CurrentServer == "User" ? "You (Server)" : "You (Receiver)")</h5>
            <form method="post">
                <input type="hidden" asp-for="Point.MatchId" />
                <input type="hidden" name="Point.IsUserWinner" value="true" />
                <input type="hidden" name="Point.IsFirstServe" value="@Model.MatchViewModel.IsFirstServe.ToString().ToLower()" />
                <input type="hidden" asp-for="Point.NumberOfShots" />
                @* Ace and Fault/Double Fault ONLY VISIBLE if you are the server *@
                @if (Model.MatchViewModel.CurrentServer == "User")
                {
                    <button type="submit" name="Point.PointType" value="Ace" class="btn btn-success m-1" @(Model.MatchViewModel.IsFirstServe ? "" : "disabled")>Ace</button>
                    <button type="submit" name="Point.PointType" value="Fault" class="btn btn-warning m-1">
                        @(Model.MatchViewModel.IsFirstServe ? "Fault" : "Double Fault")
                    </button>
                }
                @* Winner, Unforced Error, Forced Error ALWAYS VISIBLE *@
                <button type="submit" name="Point.PointType" value="Winner" class="btn btn-primary m-1">Winner</button>
                <button type="submit" name="Point.PointType" value="Unforced Error" class="btn btn-secondary m-1">Unforced Error</button>
                <button type="submit" name="Point.PointType" value="Forced Error" class="btn btn-secondary m-1">Forced Error</button>
            </form>
        </div>
        <div class="col text-center">
            <h5>@(Model.MatchViewModel.CurrentServer == "Opponent" ? "Opponent (Server)" : "Opponent (Receiver)")</h5>
            <form method="post">
                <input type="hidden" asp-for="Point.MatchId" />
                <input type="hidden" name="Point.IsUserWinner" value="false" />
                <input type="hidden" name="Point.IsFirstServe" value="@Model.MatchViewModel.IsFirstServe.ToString().ToLower()" />
                <input type="hidden" asp-for="Point.NumberOfShots" />
                @* Ace and Fault/Double Fault ONLY VISIBLE if opponent is the server *@
                @if (Model.MatchViewModel.CurrentServer == "Opponent")
                {
                    <button type="submit" name="Point.PointType" value="Ace" class="btn btn-danger m-1" @(Model.MatchViewModel.IsFirstServe ? "" : "disabled")>Ace</button>
                    <button type="submit" name="Point.PointType" value="Fault" class="btn btn-warning m-1">
                        @(Model.MatchViewModel.IsFirstServe ? "Fault" : "Double Fault")
                    </button>
                }
                @* Winner, Unforced Error, Forced Error ALWAYS VISIBLE *@
                <button type="submit" name="Point.PointType" value="Winner" class="btn btn-danger m-1">Winner</button>
                <button type="submit" name="Point.PointType" value="Unforced Error" class="btn btn-danger m-1">Unforced Error</button>
                <button type="submit" name="Point.PointType" value="Forced Error" class="btn btn-danger m-1">Forced Error</button>
            </form>
        </div>
    </div>
}
