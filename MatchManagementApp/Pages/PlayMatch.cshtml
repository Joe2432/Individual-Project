@page
@model MatchManagementApp.UI.Pages.PlayMatchModel
@{
    ViewData["Title"] = "Play Match";
}

<h2>Play Match</h2>

@if (Model.ViewModel?.Score != null)
{
    <div class="scoreboard border p-3 mb-4 rounded bg-light">
        <table class="table table-bordered text-center mb-0">
            <thead class="table-secondary">
                <tr>
                    <th></th>
                    @foreach (var idx in Model.ViewModel.DisplaySetIndices)
                    {
                        <th>Set @(idx + 1)</th>
                    }
                    <th>In Game</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><strong>You</strong></td>
                    @foreach (var games in Model.ViewModel.UserSetGames)
                    {
                        <td>@games</td>
                    }
                    <td>
                        @if (Model.ViewModel.Score.InTiebreak && Model.ViewModel.Score.CurrentGameScore.Contains('-'))
                        {
                            var parts = Model.ViewModel.Score.CurrentGameScore.Split('-');
                            @parts[0].Trim()
                        }
                        else
                        {
                            @Model.ViewModel.GameUserDisplay
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Opponent</strong></td>
                    @foreach (var games in Model.ViewModel.OpponentSetGames)
                    {
                        <td>@games</td>
                    }
                    <td>
                        @if (Model.ViewModel.Score.InTiebreak && Model.ViewModel.Score.CurrentGameScore.Contains('-'))
                        {
                            var parts = Model.ViewModel.Score.CurrentGameScore.Split('-');
                            @parts[1].Trim()
                        }
                        else
                        {
                            @Model.ViewModel.GameOpponentDisplay
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

<div class="row">
    <div class="col-md-6 text-center">
        <h4>You Won The Point</h4>
        <form method="post">
            <input type="hidden" name="isUserWinner" value="true" />
            <button type="submit" name="pointType" value="Ace" class="btn btn-success m-2">Ace</button>
            <button type="submit" name="pointType" value="Winner" class="btn btn-success m-2">Winner</button>
            <button type="submit" name="pointType" value="Unforced Error" class="btn btn-success m-2">Unforced Error</button>
            <button type="submit" name="pointType" value="Forced Error" class="btn btn-success m-2">Forced Error</button>
            <button type="submit" name="pointType" value="Double Fault" class="btn btn-success m-2">Double Fault</button>
        </form>
    </div>

    <div class="col-md-6 text-center">
        <h4>Opponent Won The Point</h4>
        <form method="post">
            <input type="hidden" name="isUserWinner" value="false" />
            <button type="submit" name="pointType" value="Ace" class="btn btn-danger m-2">Ace</button>
            <button type="submit" name="pointType" value="Winner" class="btn btn-danger m-2">Winner</button>
            <button type="submit" name="pointType" value="Unforced Error" class="btn btn-danger m-2">Unforced Error</button>
            <button type="submit" name="pointType" value="Forced Error" class="btn btn-danger m-2">Forced Error</button>
            <button type="submit" name="pointType" value="Double Fault" class="btn btn-danger m-2">Double Fault</button>
        </form>
    </div>
</div>
